#include <glib.h>
#include <gmime/gmime.h>

#define QUEUE_DIR "@SPMFILTER_QUEUE_DIR@"
#define LIB_DIR "@LIBDIR@"

#define GLIB2_VERSION (GLIB_MAJOR_VERSION * 10000 \
	+ GLIB_MINOR_VERSION * 100 \
	+ GLIB_MICRO_VERSION)

#define GMIME_VERSION @GMIME_VERSION@

#define EMAIL_EXTRACT "(?:.*<)?([^>]*)(?:>)?"

typedef struct {
	gboolean debug;
	char *config_file;
	char *engine;
	char *spool_dir;
	gchar **modules;
	int module_fail;
	char *nexthop;
	int nexthop_fail_code;
	char *nexthop_fail_msg;
	
	/* hash table for smtp codes */
	GHashTable *smtp_codes;
} SETTINGS;

typedef struct {
	char *from;
	GSList *rcpt;
	char *message_file;
	char *auth_user;
	char *auth_pass;
	char *nexthop;
} MESSAGE;

typedef struct {
	/* hello we received */
	char *helo;
	
	/* recipients */
	GSList *rcpt;
	
	/* sender */
	char *from;
	
	/* size of message body */
	size_t msgbodysize;
	
	/* this is our spooling file */
	char *queue_file;
	
	/* xfoward */
	char *xforward_addr;
	
	/* hash table for runtime data */
	GHashTable *runtime_data;
	
} MAILCONN;

typedef struct {
	SETTINGS *settings;
	gchar *line;
	GMimeMessage *message;
} HL;

char* get_substring(const char *pattern, const char *haystack, int pos);
GMimeMessage *get_message(char *message_path);
const char *get_header(MAILCONN *mconn, char *header_name);
int smtp_delivery(SETTINGS *settings, MESSAGE *msg_data);
